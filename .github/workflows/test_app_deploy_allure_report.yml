name: Test app and Deploy Allure Report with History

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - "**"

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test-and-generate-report:
    name: Run tests and generate Allure report
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use system Python
        run: python --version

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install --upgrade Appium-Python-Client
          pip install allure-pytest

      # 1. Luo historia-hakemistot
      - name: Create Allure directories
        shell: pwsh
        run: |
          if (!(Test-Path "./allure-results/history")) {
            New-Item -ItemType Directory -Path "./allure-results/history" | Out-Null
          }
          Write-Host "Created allure-results/history directory"

      # 2. Yritä ladata edellinen historia artifactista
      - name: Download previous allure history
        uses: actions/download-artifact@v4
        with:
          name: allure-history
          path: ./allure-results/history
        continue-on-error: true

      # 3. Luo dummy-historiatiedostot vain jos historiaa ei löydy
      - name: Create dummy history if needed
        shell: pwsh
        run: |
          $historyPath = "./allure-results/history"
          $files = Get-ChildItem -Path $historyPath -File -ErrorAction SilentlyContinue
          
          if (-not $files -or $files.Count -eq 0) {
              Write-Host "No history found, creating dummy history files"
              
              # Luo history-trend.json taulukolla
              $historyTrend = @(
                  @{
                      "buildOrder" = 1
                      "reportName" = "Initial Run"
                      "reportUrl"  = ""
                      "data"       = @{
                          "failed"  = 0
                          "broken"  = 0
                          "skipped" = 0
                          "passed"  = 0
                          "unknown" = 0
                          "total"   = 0
                      }
                  }
              )
              $historyTrend | ConvertTo-Json -Depth 10 | Out-File -FilePath "$historyPath/history-trend.json" -Encoding UTF8
              
              # Luo tyhjä history.json
              @{} | ConvertTo-Json -Depth 10 | Out-File -FilePath "$historyPath/history.json" -Encoding UTF8
              
              Write-Host "Dummy history files created successfully"
          } else {
              Write-Host "History files found: $($files.Count)"
              $files | ForEach-Object { Write-Host "  - $($_.Name)" }
          }

      # 4. Aja testit
      - name: Run Appium tests with Allure reporting
        run: pytest --alluredir=allure-results -v -s Test_features_automation_allure.py

      # 5. Generoi Allure-raportti
      - name: Generate Allure report
        if: always()
        run: |
          npm install -g allure-commandline
          allure generate allure-results --clean -o allure-report

      # 6. Päivitä buildOrder uusille ajokerroille
      - name: Update history with build order
        shell: pwsh
        run: |
          $historyTrendPath = "./allure-results/history/history-trend.json"
          if (Test-Path $historyTrendPath) {
              $historyTrend = Get-Content $historyTrendPath -Raw | ConvertFrom-Json
              
              # Jos data ei ole taulukko, tee siitä taulukko
              if ($historyTrend -isnot [System.Collections.IEnumerable] -or $historyTrend -is [string]) {
                  $historyTrend = @($historyTrend)
              }

              # Etsi suurin buildOrder
              $maxBuildOrder = 0
              foreach ($item in $historyTrend) {
                  if ($item.buildOrder -gt $maxBuildOrder) {
                      $maxBuildOrder = $item.buildOrder
                  }
              }

              # Päivitä uusi buildOrder
              $newBuildOrder = $maxBuildOrder + 1

              # Lisää uusi entry history-trend.json:ään
              $newEntry = @{
                  "buildOrder" = $newBuildOrder
                  "reportName" = "Run #$newBuildOrder"
                  "reportUrl"  = ""
                  "data"       = @{
                      "failed"  = 0
                      "broken"  = 0
                      "skipped" = 0
                      "passed"  = 0
                      "unknown" = 0
                      "total"   = 0
                  }
              }

              $historyTrend += $newEntry
              $historyTrend | ConvertTo-Json -Depth 10 | Out-File -FilePath $historyTrendPath -Encoding UTF8
              
              Write-Host "Updated build order to: $newBuildOrder"
          }

      # 7. Tallenna uusi historia artifactiksi
      - name: Upload history artifact for next run
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: ./allure-results/history/
          retention-days: 30
          if-no-files-found: warn

      - name: Upload Allure report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

  deploy-to-github-pages:
    name: Deploy Allure report to GitHub Pages
    runs-on: ubuntu-latest
    needs: test-and-generate-report
    if: always()
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./allure-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
