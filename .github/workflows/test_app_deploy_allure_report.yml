name: Test app and Deploy Allure Report with History

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - "**"

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test-and-generate-report:
    name: Run tests and generate Allure report
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use system Python
        run: python --version

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install --upgrade Appium-Python-Client
          pip install allure-pytest

      # 1. Luo historia-hakemistot
      - name: Create Allure directories
        shell: powershell
        run: |
          New-Item -ItemType Directory -Path "./allure-results/history" -Force
          Write-Host "Created allure-results/history directory"

      # 2. Lataa edellinen historia artifactista (jos löytyy)
      - name: Download previous allure history
        uses: actions/download-artifact@v4
        with:
          name: allure-history
          path: ./allure-results/history
        continue-on-error: true

      # 3. Luo dummy-historiatiedostot ensimmäistä ajoa varten
      - name: Create dummy history if needed
        shell: powershell
        run: |
          $historyPath = "./allure-results/history"
          $files = Get-ChildItem -Path $historyPath -File
          
          if ($files.Count -eq 0) {
              Write-Host "No history found, creating dummy history files"
              
              # Luo history-trend.json
              $historyTrend = @(
                  @{"buildOrder"=1;"reportName"="Initial Run";"reportUrl"="";"data"=@{"failed"=0;"broken"=0;"skipped"=0;"passed"=0;"unknown"=0;"total"=0}}
              )
              $historyTrend | ConvertTo-Json | Out-File -FilePath "$historyPath/history-trend.json"
              
              # Luo history.json
              $history = @{}
              $history | ConvertTo-Json | Out-File -FilePath "$historyPath/history.json"
              
              Write-Host "Dummy history files created successfully"
          } else {
              Write-Host "History files found: $($files.Count)"
              $files | ForEach-Object { Write-Host "  - $($_.Name)" }
          }

      # 4. Aja testit
      - name: Run Appium tests with Allure reporting
        run: pytest --alluredir=allure-results -v -s Test_features_automation_allure.py

      # 5. Generoi Allure-raportti
      - name: Generate Allure report
        if: always()
        run: |
          npm install -g allure-commandline
          allure generate allure-results --clean -o allure-report

      # 6. Päivitä buildOrder uusille ajokerroille
      - name: Update build order
        shell: powershell
        run: |
          $historyTrendPath = "./allure-results/history/history-trend.json"
          if (Test-Path $historyTrendPath) {
              $historyTrend = Get-Content $historyTrendPath | ConvertFrom-Json
              
              $maxBuildOrder = 0
              foreach ($item in $historyTrend) { if ($item.buildOrder -gt $maxBuildOrder) { $maxBuildOrder = $item.buildOrder } }
              $currentBuildOrder = $maxBuildOrder + 1
              Write-Host "Updated build order to: $currentBuildOrder"
          } else {
              $currentBuildOrder = 1
          }

      # 7. Päivitä koko historia uusilla tuloksilla
      - name: Update complete history with new results
        shell: powershell
        run: |
          $historyPath = "./allure-results/history"
          $resultsPath = "./allure-results"
          
          if (Test-Path "$resultsPath/data/test-cases") {
              $testCases = Get-ChildItem -Path "$resultsPath/data/test-cases" -Filter *.json
              foreach ($testCase in $testCases) {
                  $testCaseData = Get-Content $testCase.FullName -Raw | ConvertFrom-Json
                  $historyFile = "$historyPath/history.json"
                  
                  if (Test-Path $historyFile) { $historyData = Get-Content $historyFile -Raw | ConvertFrom-Json }
                  else { $historyData = @{} }
                  
                  $testName = $testCaseData.name
                  if (-not $historyData.$testName) { $historyData.$testName = @() }
                  
                  $newResult = @{
                      "buildOrder" = $currentBuildOrder
                      "status" = $testCaseData.status
                      "time" = @{
                          "start" = $testCaseData.start
                          "stop" = $testCaseData.stop
                          "duration" = $testCaseData.stop - $testCaseData.start
                      }
                  }
                  
                  $historyData.$testName += $newResult
                  $historyData | ConvertTo-Json -Depth 10 | Out-File -FilePath $historyFile
              }
          }

      # 8. Tallenna uusi historia artifactiksi
      - name: Upload history artifact for next run
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: ./allure-results/history/
          retention-days: 30
          if-no-files-found: warn

      # 9. Tallenna Allure-raportti artifactiksi
      - name: Upload Allure report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

  deploy-to-github-pages:
    name: Deploy Allure report to GitHub Pages
    runs-on: ubuntu-latest
    needs: test-and-generate-report
    if: always()
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./allure-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
