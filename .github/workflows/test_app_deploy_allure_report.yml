name: Test app and Deploy Allure Report with History

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - "**"

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test-and-generate-report:
    name: Run tests and generate Allure report
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use system Python
        run: python --version
        shell: powershell

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install --upgrade Appium-Python-Client
          pip install allure-pytest
        shell: powershell

      # 1. CRITICAL: Create directory structure for Allure history
      - name: Create Allure History Directory
        run: |
          New-Item -ItemType Directory -Path "./allure-results/history" -Force
          Write-Host "Created ./allure-results/history directory"
        shell: powershell

      # 2. CRITICAL: Download history from previous successful run
      - name: Download Previous Allure History
        uses: actions/download-artifact@v4
        with:
          name: allure-history
          path: ./allure-results/history  # Must be this exact path
        continue-on-error: true  # Essential for first run

      # 3. DEBUG: Verify what was downloaded
      - name: Verify History Download
        run: |
          Write-Host "Contents of ./allure-results/history after download:"
          Get-ChildItem -Path "./allure-results/history" -File | Format-Table Name, Length
          $fileCount = (Get-ChildItem -Path "./allure-results/history" -File).Count
          Write-Host "Total history files found: $fileCount"
        shell: powershell

      # 4. Update Allure history metadata with Python
      - name: Update Allure history with Python
        run: |
          $env:PYTHONUTF8 = "1"
          python update_allure_history.py -v
        shell: powershell

      # 5. Run tests - generates new results in allure-results
      - name: Run Appium tests with Allure reporting
        shell: powershell
        run: pytest --alluredir=allure-results -v -s Test_features_automation_allure.py

      # 6. DEBUG: Verify test results were generated
      - name: Verify Test Results
        run: |
          Write-Host "Contents of ./allure-results after tests:"
          Get-ChildItem -Path "./allure-results" -Exclude "history" | Format-Table Name, Length
          $resultCount = (Get-ChildItem -Path "./allure-results" -Exclude "history").Count
          Write-Host "Total test result files: $resultCount"
        shell: powershell

      # 7. Install Allure CLI and generate report using Python
      - name: Generate Allure report with Python
        run: |
          $env:PYTHONUTF8 = "1"
          python allure_operations.py --install --generate --verbose
        shell: powershell

      # 8. CRITICAL: Upload NEW history for NEXT run
      - name: Upload history artifact for next run
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: ./allure-report/history/
          retention-days: 30
          if-no-files-found: error  # Changed to error to catch issues

      # 9. Upload full report artifact for deployment
      - name: Upload Allure report artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
          if-no-files-found: error  # Changed to error to catch issues

  deploy-to-github-pages:
    name: Deploy Allure report to GitHub Pages
    runs-on: ubuntu-latest
    needs: test-and-generate-report
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./allure-report
        continue-on-error: true

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./allure-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4