name: Test app and Deploy Allure Report

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test-and-generate-report:
    name: Run tests and generate Allure report
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use system Python
        run: python --version

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install --upgrade Appium-Python-Client
          pip install allure-pytest

      - name: Setup allure history directory
        run: |
          # Luo historia-hakemisto (tyhj채 ensimm채isell채 kerralla)
          mkdir -p allure-history
          echo "Setting up allure history directory"

      - name: Try to download previous allure history
        uses: actions/download-artifact@v4
        with:
          name: allure-history
          path: allure-history
        continue-on-error: true  # Ei ep채onnistu vaikka artefaktia ei olisi

      - name: Run Appium tests with Allure reporting
        run: pytest --alluredir=allure-results Test_features_automation_allure.py

      - name: Generate Allure report with historical data
        run: |
          npm install -g allure-commandline
          # Kopioi uudet tulokset historiaan
          mkdir -p allure-history
          cp -r allure-results/* allure-history/
          # Generoi raportti koko historiasta
          allure generate allure-history --clean -o allure-report

      - name: Preserve test history for future runs
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: allure-history/
          retention-days: 30

      - name: Prepare Allure report for deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: allure-report

  deploy-to-github-pages:
    name: Deploy Allure report to GitHub Pages
    runs-on: ubuntu-latest
    needs: test-and-generate-report
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4