name: Test app and Deploy Allure Report with History

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - "**"

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test-and-generate-report:
    name: Run tests and generate Allure report
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use system Python
        run: python --version

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install --upgrade Appium-Python-Client
          pip install allure-pytest

      # 1. Aja testit ensin
      - name: Run Appium tests with Allure reporting
        run: pytest --alluredir=allure-results -v -s Test_features_automation_allure.py

      # 2. Lataa vanha historia GitHubista
      - name: Download previous allure history
        uses: actions/download-artifact@v4
        with:
          name: allure-history
          path: ./history
        continue-on-error: true

      # 3. Kopioi vanha historia uusiin results-kansioihin
      - name: Restore history into allure-results
        if: always()
        shell: pwsh
        run: |
          if (!(Test-Path "allure-results/history")) {
              New-Item -ItemType Directory -Path allure-results/history | Out-Null
          }
          if (Test-Path "history") {
              Copy-Item -Path .\history\* -Destination allure-results/history -Recurse -Force
          }

      # 4. Generoi raportti (yhdistää historian)
      - name: Generate Allure report
        if: always()
        shell: pwsh
        run: |
          npm install -g allure-commandline
          allure generate allure-results --clean -o allure-report

      # 5. Tallenna uusi historia GitHub-artifactiksi
      - name: Upload history artifact for next run
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: allure-report/history/
          retention-days: 30

      # 6. Uploadaa raportti artifactiksi
      - name: Upload Allure report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

  deploy-to-github-pages:
    name: Deploy Allure report to GitHub Pages
    runs-on: ubuntu-latest
    needs: test-and-generate-report
    if: always()
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./allure-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
