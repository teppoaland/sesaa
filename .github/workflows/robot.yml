name: Run Weather App Robot Framework Tests

on:
  workflow_dispatch:
    inputs:
      save_all_screenshots:
        description: 'Save all screenshots (not just failed ones)'
        required: false
        default: false
        type: boolean

jobs:
  robot-tests:
    runs-on: self-hosted

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Näytä ympäristön tiedot
      - name: Show environment info
        shell: powershell
        run: |
          Write-Host "GitHub Workspace: $env:GITHUB_WORKSPACE"
          Write-Host "Current directory:"
          pwd
          Write-Host "Python version:"
          python --version
          Write-Host "Node.js version:"
          node --version

      # 3️⃣ Asenna riippuvuudet
      - name: Install Python dependencies
        shell: powershell
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install --upgrade Appium-Python-Client robotframework robotframework-appiumlibrary

      # 4️⃣ Varmista ADB-laite
      - name: Verify ADB connection
        shell: powershell
        run: |
          adb kill-server
          adb start-server
          Start-Sleep -Seconds 2
          Write-Host "Connected devices:"
          adb devices
          $deviceCount = (adb devices | Select-Object -Skip 1 | Where-Object { $_ -match "device$" } | Measure-Object).Count
          if ($deviceCount -eq 0) {
            Write-Error "No devices connected"
            exit 1
          }

      # 5️⃣ Käynnistä Appium-serveri
      - name: Start Appium server
        shell: powershell
        run: |
          # Tapa olemassa olevat Appium-prosessit
          Get-Process -Name "node" -ErrorAction SilentlyContinue | Where-Object { $_.ProcessName -eq "node" -and $_.CommandLine -like "*appium*" } | Stop-Process -Force -ErrorAction SilentlyContinue
          
          # Vapauta portti 4723 tarvittaessa
          $tcpConnection = Get-NetTCPConnection -LocalPort 4723 -ErrorAction SilentlyContinue
          if ($tcpConnection -and $tcpConnection.OwningProcess) {
            Stop-Process -Id $tcpConnection.OwningProcess -Force -ErrorAction SilentlyContinue
            Write-Host "Freed port 4723"
          }
          
          # Käynnistä Appium taustalle
          Write-Host "Starting Appium server..."
          Start-Process -NoNewWindow -FilePath "node" -ArgumentList "$(npm root -g)/appium/build/lib/main.js", "-p", "4723", "--allow-insecure=*:adb_shell"
          
          # Odota että Appium käynnistyy
          $timeout = 30
          $counter = 0
          $appiumReady = $false
          
          while ($counter -lt $timeout) {
            try {
              $response = Invoke-WebRequest -Uri "http://127.0.0.1:4723/status" -UseBasicParsing -TimeoutSec 2
              if ($response.StatusCode -eq 200) {
                Write-Host "Appium server is ready!"
                $appiumReady = $true
                break
              }
            } catch {
              Write-Host "Waiting for Appium to start... ($counter/$timeout)"
              Start-Sleep -Seconds 2
              $counter += 2
            }
          }
          
          if (-not $appiumReady) {
            Write-Error "Appium failed to start within timeout period"
            exit 1
          }

      # 6️⃣ Aja Robot Framework -testit
      - name: Run Robot Framework tests
        shell: powershell
        run: |
          Write-Host "Running Robot Framework tests..."
          robot --outputdir robot-reports --log robot-log.html --report robot-report.html --xunit robot-xunit.xml weather_app_tests.robot
          
          # Tarkista exit code ja näytä raportin sijainti
          if ($LASTEXITCODE -eq 0) {
            Write-Host "✅ Tests passed successfully!"
          } else {
            Write-Host "❌ Tests failed with exit code $LASTEXITCODE"
          }
          
          Write-Host "Reports generated in: $pwd/robot-reports"

      # 7️⃣ Lataa raportit artefaktana
      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: robot-framework-reports
          path: |
            robot-reports/
            robot-log.html
            robot-report.html
            robot-xunit.xml
          retention-days: 7

      # 8️⃣ Lopeta Appium-serveri
      - name: Stop Appium server
        if: always()
        shell: powershell
        run: |
          Write-Host "Stopping Appium server..."
          Get-Process -Name "node" -ErrorAction SilentlyContinue | Where-Object { $_.ProcessName -eq "node" -and $_.CommandLine -like "*appium*" } | Stop-Process -Force -ErrorAction SilentlyContinue
          Write-Host "Appium server stopped"